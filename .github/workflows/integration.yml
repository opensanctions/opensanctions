name: integration

on:
  push: {}
  workflow_dispatch: {}

jobs:
  docker:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push release
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/opensanctions/opensanctions:latest
          cache-from: type=registry,ref=ghcr.io/opensanctions/opensanctions:buildcache
          cache-to: type=registry,ref=ghcr.io/opensanctions/opensanctions:buildcache,mode=max

  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: opensanctions
          POSTGRES_USER: opensanctions
          POSTGRES_DB: opensanctions
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      OPENSANCTIONS_DATABASE_URI: "postgresql://opensanctions:opensanctions@localhost/opensanctions"

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2.3.2
        with:
          python-version: "3.9"
      - name: Install dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get install -y -qq libicu-dev
          pip install --no-cache-dir -q pyicu awscli
          pip install --no-cache-dir -q -e ".[dev]"
          pip freeze
      - name: Run a single dataset
        run: |
          opensanctions run us_ofac_cons
      - name: Build a distribution
        run: |
          python setup.py sdist bdist_wheel
      - name: Publish opensanctions to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          packages_dir: dist/
          skip_existing: true
